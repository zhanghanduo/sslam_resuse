%YAML:1.0

# common parameters
# support: 1 imu 1 cam; 1 imu 2 cam: 2 cam;
imu: 0
ins: 1
num_of_cam: 2

# Online set to 0 means offline processing to create a pose graph as prior map. (not guarantee realtime)
# Otherwise realtime online pose estimation with or without prior map.
# Note: online set to 1 only if you set ins to 1.
online: 1

# If cubicle set to 1, then you have to open cubicle_detect process to generate cubicle_topic in obstacle msgs format!
# Otherwise you will not be able to correctly start the system.
# We suggest set cubicle to 0 in open area or on low computation capability platform.
# Set to 1 in heavy traffic area.
cubicle: 1

# If gps_initial is set to 1, then the initial robot body pose is aligned with GPS pose at the initial moment, for visualization.
# Furthermore the pose graph saved has global information for better prior map use.
gps_initial: 1

imu_topic: ""
ins_topic: "/gps_inspva"
image0_topic: "/left/image_rect"
image1_topic: "/right/image_rect"
cubicle_topic: "/obs_map"
gps_topic: "/gps_position"

cam0_calib: "left_av1.yaml"
cam1_calib: "left_av1.yaml"


image_width: 960
image_height: 604
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T.
                        # We will try to calibrate it. Do some rotation movement at beginning.


#body_T_cam0: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ 4.1163893677863439e-02, -1.6626197930896508e-01,
#          9.8522205014582531e-01, 8.3736286403015008e+00,
#          -9.9769617049334092e-01, -6.0057901969635230e-02,
#          3.1549957114523963e-02, 8.1263169092392407e-01,
#          5.3924810989007199e-02, -9.8425098559629154e-01,
#          -1.6835115714639137e-01, 5.1745977362417628e-01, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ 4.1139888760913124e-02, -1.6661952550335518e-01,
#          9.8516264813165577e-01, 8.3871867093817905e+00,
#          -9.9772642086483687e-01, -5.9528542932262063e-02,
#          3.1596545453643654e-02, 3.0487064163401967e-01,
#          5.3380695583535032e-02, -9.8422268125531354e-01,
#          -1.6868970046099241e-01, 5.4638691368747305e-01, 0., 0., 0., 1. ]

# Extrinsic homogeneous rotation and translation matrix from Camera to IMU/INS.
body_T_cam0: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 2.9877389670113774e-02, -1.4118121305555437e-01, 9.8953282243019247e-01, 8.2851285651415232e+00,
          -9.9954503914953419e-01, -1.2962430021135063e-04, 3.0161198734426242e-02, 5.4123282699596309e-01,
          -4.1299271248923519e-03, -9.8998376162324175e-01, -1.4112085396652119e-01, -1.3023349730548015e+00,
          0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [ 2.9831831637878503e-02, -1.4153593013061250e-01, 9.8948352300742815e-01, 8.2937199832244488e+00,
          -9.9954408681168561e-01, 3.8724189351846405e-04, 3.0190537648562388e-02, 3.4912869565746685e-02,
          -4.6562153002872586e-03, -9.8993304345585831e-01, -1.4145984989847493e-01, -1.3031477964803839e+00,
          0., 0., 0., 1. ]

#body_T_cam0: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ -2.5079749518943872e-02, -1.4618488190305928e-01, 9.8893932395625539e-01, 7.5543084782582905e+00,
#          -9.9943682623463781e-01, -1.8395080809806785e-02, -2.8065127258484479e-02, -4.3033984163607653e-01,
#          2.2294316094046918e-02, -9.8908624563532843e-01, -1.4564121039358824e-01, 1.6571203493507405e-02,
#          0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#  rows: 4
#  cols: 4
#  dt: d
#  data: [ -2.5166539894954099e-02, -1.4615214767014301e-01, 9.8894195734690116e-01, 7.5359109005944100e+00,
#          -9.9944059480069436e-01, -1.8117780658862603e-02, -2.8111269776216141e-02, -9.3096549986875254e-01,
#          2.2025955919086515e-02, -9.8909620146647093e-01, -1.4561442754908716e-01, 2.7605003254175788e-02,
#          0., 0., 0., 1. ]

# Multiple thread support
multiple_thread: 1
# Gpu acceleration support
use_gpu: 0
use_gpu_acc_flow: 0

#feature tracker parameters
max_cnt: 200            # max feature number in feature tracking
# min distance between two features
min_dist: 30
F_threshold: 1.0        # RANSAC threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.08   # max solver iteration time (ms), to guarantee real time
max_num_iterations: 10  # max solver iteration, to guarantee real time
keyframe_parallax: 15.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.1495                          # initial value of time offset. unit: s. reading image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0            # load and reuse previous pose graph; load from 'pose_graph_save_path'.
display_previous_trajectory: 1         # If load previous pose graph, option whether display the previous trajectory.
pose_graph_save_name: "soon_lee_6Oct.bin"   # save and load path
save_image: 0                          # save image in pose graph for visualization propose; you can close this function by setting 0
